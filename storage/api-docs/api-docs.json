{
    "openapi": "3.0.0",
    "info": {
        "title": "GiftShop API",
        "description": "GiftShop Restful API",
        "contact": {
            "email": "gerardo.vargas89@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Login",
                "description": "Log into a user",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User's email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item added successfully"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Register",
                "description": "Register a user",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "User's display mail. This is not used for login.",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "User's email. This is used for login.",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "description": "Repeat user's password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    }
                }
            }
        },
        "/api/items": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get Items",
                "description": "Obtains a paginated list of items",
                "operationId": "indexItems",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Category of items to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "An array of Ids of specific items you want to obtain",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A paginated list of items"
                    }
                }
            },
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Creates Item",
                "description": "Create a new item",
                "operationId": "createItem",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "File",
                                        "type": "file"
                                    },
                                    "name": {
                                        "description": "Item name",
                                        "type": "string"
                                    },
                                    "price": {
                                        "description": "Item's price",
                                        "type": "float"
                                    },
                                    "category": {
                                        "description": "Item category",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "description": "Item description",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Item added successfully"
                    },
                    "422": {
                        "description": "Item not created"
                    }
                }
            }
        },
        "/api/items/{id}": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get single Item data",
                "description": "Obtains the detailed data of an item",
                "operationId": "showItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of item to obtain data from",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data of a single item"
                    }
                }
            },
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Updates Item",
                "description": "Update an existing item",
                "operationId": "updateItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of item to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "File",
                                        "type": "file"
                                    },
                                    "name": {
                                        "description": "Item name",
                                        "type": "string"
                                    },
                                    "price": {
                                        "description": "Item's price",
                                        "type": "float"
                                    },
                                    "category": {
                                        "description": "Item category",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "description": "Item description",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item updated successfully"
                    },
                    "422": {
                        "description": "Item not updated"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Deletes Item",
                "description": "Delete an item",
                "operationId": "deleteItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of item to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item deleted successfully"
                    }
                }
            }
        }
    },
    "security": [
        []
    ]
}